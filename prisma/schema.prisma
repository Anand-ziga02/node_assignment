generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int             @id @default(autoincrement())
  email            String          @unique
  password         String
  firstName        String
  lastName         String
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  avatar           String?
  resetToken       String?         @default("")
  resetTokenExpiry DateTime?
  comments         Comment[]
  projects         ProjectMember[]
  tasks            Task[]
}

model Task {
  id             Int       @id @default(autoincrement())
  title          String
  description    String?
  projectId      Int?
  categoryId     Int?
  dueDate        DateTime?
  priority       String?
  estimatedTime  Int?
  status         String    @default("not_started")
  attachmentPath String?
  recurrence     String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  dependsOnId    Int?
  userId         Int?
  comments       Comment[]
  category       Category? @relation(fields: [categoryId], references: [id])
  dependsOn      Task?     @relation("TaskDependencies", fields: [dependsOnId], references: [id])
  dependentTasks Task[]    @relation("TaskDependencies")
  project        Project?  @relation(fields: [projectId], references: [id])
  assignedTo     User?     @relation(fields: [userId], references: [id])
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  tasks Task[]
}

model Project {
  id          Int             @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  members     ProjectMember[]
  tasks       Task[]
}

model ProjectMember {
  id        Int     @id @default(autoincrement())
  userId    Int
  projectId Int
  role      String
  project   Project @relation(fields: [projectId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
}

model Comment {
  id        Int      @id @default(autoincrement())
  message   String
  userId    Int
  taskId    Int
  createdAt DateTime @default(now())
  task      Task     @relation(fields: [taskId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}
